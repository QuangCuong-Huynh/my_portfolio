# Generated by Django 5.0.3 on 2025-10-14 18:28

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="BlogCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("slug", models.SlugField(blank=True, unique=True)),
                ("description", models.TextField(blank=True)),
            ],
            options={
                "verbose_name": "Blog Category",
                "verbose_name_plural": "Blog Categories",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="BlogSeries",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("slug", models.SlugField(blank=True, unique=True)),
                ("description", models.TextField()),
                ("order", models.IntegerField(default=0)),
            ],
            options={
                "verbose_name": "Blog Series",
                "verbose_name_plural": "Blog Series",
                "ordering": ["order", "name"],
            },
        ),
        migrations.CreateModel(
            name="BlogTag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                ("slug", models.SlugField(blank=True, unique=True)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="ContactMessage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=200)),
                ("email", models.EmailField(max_length=254)),
                ("subject", models.CharField(blank=True, max_length=200)),
                ("message", models.TextField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("new", "New"),
                            ("read", "Read"),
                            ("replied", "Replied"),
                            ("archived", "Archived"),
                        ],
                        default="new",
                        max_length=10,
                    ),
                ),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.CharField(blank=True, max_length=500)),
                ("admin_notes", models.TextField(blank=True)),
                ("replied_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Contact Message",
                "verbose_name_plural": "Contact Messages",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Profile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=200)),
                ("job_title", models.CharField(max_length=200)),
                ("bio", models.TextField()),
                ("summary", models.TextField(help_text="Brief professional summary")),
                ("email", models.EmailField(max_length=254)),
                ("phone", models.CharField(blank=True, max_length=20)),
                ("location", models.CharField(max_length=200)),
                (
                    "profile_image",
                    models.ImageField(blank=True, null=True, upload_to="profile/"),
                ),
                ("github_url", models.URLField(blank=True)),
                ("linkedin_url", models.URLField(blank=True)),
                ("twitter_url", models.URLField(blank=True)),
                ("website_url", models.URLField(blank=True)),
                ("meta_description", models.CharField(blank=True, max_length=160)),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "verbose_name": "Profile",
                "verbose_name_plural": "Profile",
            },
        ),
        migrations.CreateModel(
            name="ProjectCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("slug", models.SlugField(blank=True, unique=True)),
                ("description", models.TextField(blank=True)),
            ],
            options={
                "verbose_name": "Project Category",
                "verbose_name_plural": "Project Categories",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="SiteSettings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("site_title", models.CharField(default="Portfolio", max_length=200)),
                ("site_tagline", models.CharField(blank=True, max_length=200)),
                ("site_description", models.TextField(blank=True)),
                ("meta_keywords", models.CharField(blank=True, max_length=500)),
                ("google_analytics_id", models.CharField(blank=True, max_length=50)),
                ("contact_email", models.EmailField(max_length=254)),
                ("contact_phone", models.CharField(blank=True, max_length=20)),
                ("github_url", models.URLField(blank=True)),
                ("linkedin_url", models.URLField(blank=True)),
                ("twitter_url", models.URLField(blank=True)),
                ("enable_blog", models.BooleanField(default=True)),
                ("enable_contact_form", models.BooleanField(default=True)),
                ("maintenance_mode", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "verbose_name": "Site Settings",
                "verbose_name_plural": "Site Settings",
            },
        ),
        migrations.CreateModel(
            name="Skill",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=100)),
                ("slug", models.SlugField(blank=True, unique=True)),
                (
                    "sfia_level",
                    models.CharField(
                        choices=[
                            ("L1", "L1 - Entry (Follow)"),
                            ("L2", "L2 - Foundation (Assist)"),
                            ("L3", "L3 - Practitioner (Apply)"),
                            ("L4", "L4 - Senior (Enable)"),
                            ("L5", "L5 - Lead (Ensure/Advise)"),
                            ("L6", "L6 - Principal (Initiate/Influence)"),
                            ("L7", "L7 - Expert (Set Strategy)"),
                        ],
                        default="L3",
                        max_length=2,
                    ),
                ),
                (
                    "industry_level",
                    models.CharField(
                        choices=[
                            ("entry", "Entry"),
                            ("foundation", "Foundation"),
                            ("practitioner", "Practitioner"),
                            ("senior", "Senior"),
                            ("lead", "Lead"),
                            ("principal", "Principal"),
                            ("expert", "Expert"),
                        ],
                        default="practitioner",
                        max_length=20,
                    ),
                ),
                (
                    "sector",
                    models.CharField(
                        choices=[
                            ("ecommerce", "E-commerce"),
                            ("edtech", "EdTech"),
                            ("banking", "Banking"),
                            ("devops", "DevOps"),
                            ("govtech", "GovTech"),
                            ("healthcare", "Healthcare"),
                            ("fintech", "FinTech"),
                            ("other", "Other"),
                        ],
                        default="other",
                        max_length=20,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="Detailed description of skill proficiency"
                    ),
                ),
                (
                    "years_experience",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=4,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(50),
                        ],
                    ),
                ),
                ("is_featured", models.BooleanField(default=False)),
                ("order", models.IntegerField(default=0)),
            ],
            options={
                "ordering": ["area", "order", "name"],
            },
        ),
        migrations.CreateModel(
            name="SkillArea",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("slug", models.SlugField(blank=True, unique=True)),
                ("description", models.TextField(blank=True)),
                (
                    "icon",
                    models.CharField(
                        blank=True,
                        help_text="Font Awesome icon class (e.g., fas fa-code)",
                        max_length=50,
                    ),
                ),
                ("order", models.IntegerField(default=0)),
            ],
            options={
                "verbose_name": "Skill Area",
                "verbose_name_plural": "Skill Areas",
                "ordering": ["order", "name"],
            },
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=200)),
                ("slug", models.SlugField(blank=True, unique=True)),
                ("start_date", models.DateField()),
                ("end_date", models.DateField(blank=True, null=True)),
                ("is_ongoing", models.BooleanField(default=False)),
                (
                    "situation",
                    models.TextField(help_text="Problem context and business need"),
                ),
                (
                    "task",
                    models.TextField(help_text="Project objectives and deliverables"),
                ),
                (
                    "action",
                    models.TextField(help_text="Technical approach and implementation"),
                ),
                ("result", models.TextField(help_text="Business outcomes and metrics")),
                (
                    "thumbnail",
                    models.ImageField(
                        blank=True, null=True, upload_to="projects/thumbnails/"
                    ),
                ),
                (
                    "featured_image",
                    models.ImageField(
                        blank=True, null=True, upload_to="projects/featured/"
                    ),
                ),
                ("github_url", models.URLField(blank=True)),
                ("live_demo_url", models.URLField(blank=True)),
                ("case_study_url", models.URLField(blank=True)),
                (
                    "technologies",
                    models.JSONField(
                        default=list, help_text="List of technologies used"
                    ),
                ),
                ("is_featured", models.BooleanField(default=False)),
                ("order", models.IntegerField(default=0)),
                (
                    "category",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="projects",
                        to="core.projectcategory",
                    ),
                ),
                (
                    "skills_demonstrated",
                    models.ManyToManyField(
                        blank=True, related_name="projects", to="core.skill"
                    ),
                ),
            ],
            options={
                "ordering": ["-start_date", "order"],
            },
        ),
        migrations.CreateModel(
            name="ProjectImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image", models.ImageField(upload_to="projects/gallery/")),
                ("caption", models.CharField(blank=True, max_length=200)),
                ("order", models.IntegerField(default=0)),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="core.project",
                    ),
                ),
            ],
            options={
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="Experience",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("role", models.CharField(max_length=200)),
                ("company", models.CharField(max_length=200)),
                ("location", models.CharField(max_length=200)),
                ("start_date", models.DateField()),
                ("end_date", models.DateField(blank=True, null=True)),
                ("is_current", models.BooleanField(default=False)),
                (
                    "situation",
                    models.TextField(help_text="Context and challenge faced"),
                ),
                ("task", models.TextField(help_text="Responsibilities and objectives")),
                ("action", models.TextField(help_text="Steps taken and methods used")),
                (
                    "result",
                    models.TextField(help_text="Measurable outcomes and impact"),
                ),
                ("company_url", models.URLField(blank=True)),
                ("order", models.IntegerField(default=0)),
                (
                    "skills_used",
                    models.ManyToManyField(
                        blank=True, related_name="experiences", to="core.skill"
                    ),
                ),
            ],
            options={
                "verbose_name": "Experience",
                "verbose_name_plural": "Experiences",
                "ordering": ["-start_date", "order"],
            },
        ),
        migrations.CreateModel(
            name="Education",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("institution", models.CharField(max_length=200)),
                ("degree", models.CharField(max_length=200)),
                ("field_of_study", models.CharField(max_length=200)),
                ("start_date", models.DateField()),
                ("end_date", models.DateField(blank=True, null=True)),
                ("is_current", models.BooleanField(default=False)),
                ("description", models.TextField(blank=True)),
                (
                    "gpa",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=3, null=True
                    ),
                ),
                (
                    "skills",
                    models.ManyToManyField(
                        blank=True, related_name="education_entries", to="core.skill"
                    ),
                ),
            ],
            options={
                "verbose_name": "Education",
                "verbose_name_plural": "Education",
                "ordering": ["-start_date"],
            },
        ),
        migrations.CreateModel(
            name="Certification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=200)),
                (
                    "cert_type",
                    models.CharField(
                        choices=[
                            ("certification", "Certification"),
                            ("award", "Award"),
                            ("recognition", "Recognition"),
                            ("publication", "Publication"),
                        ],
                        default="certification",
                        max_length=20,
                    ),
                ),
                ("issuing_authority", models.CharField(max_length=200)),
                ("issue_date", models.DateField()),
                ("expiry_date", models.DateField(blank=True, null=True)),
                ("credential_id", models.CharField(blank=True, max_length=200)),
                ("credential_url", models.URLField(blank=True)),
                (
                    "certificate_file",
                    models.FileField(
                        blank=True, null=True, upload_to="certifications/"
                    ),
                ),
                (
                    "badge_image",
                    models.ImageField(
                        blank=True, null=True, upload_to="certifications/badges/"
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("is_featured", models.BooleanField(default=False)),
                (
                    "icon_class",
                    models.CharField(
                        blank=True, help_text="Font Awesome icon class", max_length=50
                    ),
                ),
                (
                    "color_class",
                    models.CharField(
                        default="bg-blue-500",
                        help_text="Tailwind color class",
                        max_length=50,
                    ),
                ),
                (
                    "skills_validated",
                    models.ManyToManyField(
                        blank=True, related_name="certifications", to="core.skill"
                    ),
                ),
            ],
            options={
                "ordering": ["-issue_date"],
            },
        ),
        migrations.AddField(
            model_name="skill",
            name="area",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="skills",
                to="core.skillarea",
            ),
        ),
        migrations.CreateModel(
            name="BlogPost",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=200)),
                ("slug", models.SlugField(blank=True, unique=True)),
                (
                    "excerpt",
                    models.TextField(
                        help_text="Brief summary for listings", max_length=300
                    ),
                ),
                ("content", models.TextField(help_text="Markdown content")),
                (
                    "featured_image",
                    models.ImageField(
                        blank=True, null=True, upload_to="blog/featured/"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("published", "Published"),
                            ("archived", "Archived"),
                        ],
                        default="draft",
                        max_length=10,
                    ),
                ),
                ("published_date", models.DateTimeField(blank=True, null=True)),
                ("meta_description", models.CharField(blank=True, max_length=160)),
                ("meta_keywords", models.CharField(blank=True, max_length=200)),
                (
                    "reading_time",
                    models.IntegerField(
                        default=5, help_text="Estimated reading time in minutes"
                    ),
                ),
                ("view_count", models.IntegerField(default=0)),
                ("is_featured", models.BooleanField(default=False)),
                ("order", models.IntegerField(default=0)),
                (
                    "category",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="posts",
                        to="core.blogcategory",
                    ),
                ),
                (
                    "series",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="posts",
                        to="core.blogseries",
                    ),
                ),
                (
                    "tags",
                    models.ManyToManyField(
                        blank=True, related_name="posts", to="core.blogtag"
                    ),
                ),
            ],
            options={
                "ordering": ["-published_date", "-created_at"],
                "indexes": [
                    models.Index(
                        fields=["-published_date"],
                        name="core_blogpo_publish_1e969a_idx",
                    ),
                    models.Index(
                        fields=["status"], name="core_blogpo_status_032da8_idx"
                    ),
                ],
            },
        ),
        migrations.AlterUniqueTogether(
            name="skill",
            unique_together={("area", "name")},
        ),
    ]
